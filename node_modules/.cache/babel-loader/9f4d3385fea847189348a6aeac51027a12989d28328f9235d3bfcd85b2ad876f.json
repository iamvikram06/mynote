{"ast":null,"code":"export function exportAsJson(notes) {\n  const blob = new Blob([JSON.stringify(notes, null, 2)], {\n    type: \"application/json\"\n  });\n  const url = URL.createObjectURL(blob);\n  const a = document.createElement(\"a\");\n  a.href = url;\n  a.download = \"notes.json\";\n  a.click();\n  URL.revokeObjectURL(url);\n}\nexport function exportAsMarkdown(notes) {\n  const md = notes.map(n => `# ${n.title || \"Untitled\"}\\n\\n${(n.tags || []).map(t => `#${t}`).join(\" \")}\\n\\n${n.content || \"\"}\\n\\n---\\n`).join(\"\\n\");\n  const blob = new Blob([md], {\n    type: \"text/markdown\"\n  });\n  const url = URL.createObjectURL(blob);\n  const a = document.createElement(\"a\");\n  a.href = url;\n  a.download = \"notes.md\";\n  a.click();\n  URL.revokeObjectURL(url);\n}\nexport async function importFromJson(file) {\n  const text = await file.text();\n  const parsed = JSON.parse(text);\n  if (!Array.isArray(parsed)) return [];\n  return parsed.map(n => ({\n    id: n.id || crypto.randomUUID(),\n    title: n.title || \"Untitled\",\n    content: n.content || \"\",\n    tags: Array.isArray(n.tags) ? n.tags : [],\n    updatedAt: Date.now()\n  }));\n}","map":{"version":3,"names":["exportAsJson","notes","blob","Blob","JSON","stringify","type","url","URL","createObjectURL","a","document","createElement","href","download","click","revokeObjectURL","exportAsMarkdown","md","map","n","title","tags","t","join","content","importFromJson","file","text","parsed","parse","Array","isArray","id","crypto","randomUUID","updatedAt","Date","now"],"sources":["E:/Projects/mynote/src/utils/io.js"],"sourcesContent":["export function exportAsJson(notes) {\r\n  const blob = new Blob([JSON.stringify(notes, null, 2)], {\r\n    type: \"application/json\",\r\n  });\r\n  const url = URL.createObjectURL(blob);\r\n  const a = document.createElement(\"a\");\r\n  a.href = url;\r\n  a.download = \"notes.json\";\r\n  a.click();\r\n  URL.revokeObjectURL(url);\r\n}\r\n\r\nexport function exportAsMarkdown(notes) {\r\n  const md = notes\r\n    .map(\r\n      (n) =>\r\n        `# ${n.title || \"Untitled\"}\\n\\n${(n.tags || [])\r\n          .map((t) => `#${t}`)\r\n          .join(\" \")}\\n\\n${n.content || \"\"}\\n\\n---\\n`\r\n    )\r\n    .join(\"\\n\");\r\n  const blob = new Blob([md], { type: \"text/markdown\" });\r\n  const url = URL.createObjectURL(blob);\r\n  const a = document.createElement(\"a\");\r\n  a.href = url;\r\n  a.download = \"notes.md\";\r\n  a.click();\r\n  URL.revokeObjectURL(url);\r\n}\r\n\r\nexport async function importFromJson(file) {\r\n  const text = await file.text();\r\n  const parsed = JSON.parse(text);\r\n  if (!Array.isArray(parsed)) return [];\r\n  return parsed.map((n) => ({\r\n    id: n.id || crypto.randomUUID(),\r\n    title: n.title || \"Untitled\",\r\n    content: n.content || \"\",\r\n    tags: Array.isArray(n.tags) ? n.tags : [],\r\n    updatedAt: Date.now(),\r\n  }));\r\n}\r\n"],"mappings":"AAAA,OAAO,SAASA,YAAYA,CAACC,KAAK,EAAE;EAClC,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACC,IAAI,CAACC,SAAS,CAACJ,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE;IACtDK,IAAI,EAAE;EACR,CAAC,CAAC;EACF,MAAMC,GAAG,GAAGC,GAAG,CAACC,eAAe,CAACP,IAAI,CAAC;EACrC,MAAMQ,CAAC,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;EACrCF,CAAC,CAACG,IAAI,GAAGN,GAAG;EACZG,CAAC,CAACI,QAAQ,GAAG,YAAY;EACzBJ,CAAC,CAACK,KAAK,CAAC,CAAC;EACTP,GAAG,CAACQ,eAAe,CAACT,GAAG,CAAC;AAC1B;AAEA,OAAO,SAASU,gBAAgBA,CAAChB,KAAK,EAAE;EACtC,MAAMiB,EAAE,GAAGjB,KAAK,CACbkB,GAAG,CACDC,CAAC,IACA,KAAKA,CAAC,CAACC,KAAK,IAAI,UAAU,OAAO,CAACD,CAAC,CAACE,IAAI,IAAI,EAAE,EAC3CH,GAAG,CAAEI,CAAC,IAAK,IAAIA,CAAC,EAAE,CAAC,CACnBC,IAAI,CAAC,GAAG,CAAC,OAAOJ,CAAC,CAACK,OAAO,IAAI,EAAE,WACtC,CAAC,CACAD,IAAI,CAAC,IAAI,CAAC;EACb,MAAMtB,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACe,EAAE,CAAC,EAAE;IAAEZ,IAAI,EAAE;EAAgB,CAAC,CAAC;EACtD,MAAMC,GAAG,GAAGC,GAAG,CAACC,eAAe,CAACP,IAAI,CAAC;EACrC,MAAMQ,CAAC,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;EACrCF,CAAC,CAACG,IAAI,GAAGN,GAAG;EACZG,CAAC,CAACI,QAAQ,GAAG,UAAU;EACvBJ,CAAC,CAACK,KAAK,CAAC,CAAC;EACTP,GAAG,CAACQ,eAAe,CAACT,GAAG,CAAC;AAC1B;AAEA,OAAO,eAAemB,cAAcA,CAACC,IAAI,EAAE;EACzC,MAAMC,IAAI,GAAG,MAAMD,IAAI,CAACC,IAAI,CAAC,CAAC;EAC9B,MAAMC,MAAM,GAAGzB,IAAI,CAAC0B,KAAK,CAACF,IAAI,CAAC;EAC/B,IAAI,CAACG,KAAK,CAACC,OAAO,CAACH,MAAM,CAAC,EAAE,OAAO,EAAE;EACrC,OAAOA,MAAM,CAACV,GAAG,CAAEC,CAAC,KAAM;IACxBa,EAAE,EAAEb,CAAC,CAACa,EAAE,IAAIC,MAAM,CAACC,UAAU,CAAC,CAAC;IAC/Bd,KAAK,EAAED,CAAC,CAACC,KAAK,IAAI,UAAU;IAC5BI,OAAO,EAAEL,CAAC,CAACK,OAAO,IAAI,EAAE;IACxBH,IAAI,EAAES,KAAK,CAACC,OAAO,CAACZ,CAAC,CAACE,IAAI,CAAC,GAAGF,CAAC,CAACE,IAAI,GAAG,EAAE;IACzCc,SAAS,EAAEC,IAAI,CAACC,GAAG,CAAC;EACtB,CAAC,CAAC,CAAC;AACL","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}